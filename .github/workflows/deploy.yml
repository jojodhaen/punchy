name: Deploy to Webserver

on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'punchy-backend/**'
            frontend:
              - 'punchy-frontend/**'

  remove-previous-code:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            frontend:
                - 'punchy-frontend/**'
            backend:
                - 'punchy-backend/**'

      - name: delete frontend
        if: steps.filter.outputs.frontend == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: jorendhaen.be
          username: jorendha
          port: 22
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            rm -rf public_html/punchy_frontend

      - name: delete backend
        if: steps.filter.outputs.backend == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: jorendhaen.be
          username: jorendha
          port: 22
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            rm -rf public_html/punchy_backend

      - name: delete frontend and backend
        if: steps.filter.outputs.frontend == 'true' && steps.filter.outputs.backend == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: jorendhaen.be
          username: jorendha
          port: 22
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            rm -rf public_html/punchy_backend
            rm -rf public_html/punchy_frontend

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [ remove-previous-code, changes ]
    if: ${{ needs.changes.outputs.frontend == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21.7.3'

      - name: Install dependencies
        run: |
          cd punchy-frontend
          npm install

      - name: Build the project
        run: |
          cd punchy-frontend
          npm run build

      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.3
        with:
          host: jorendhaen.be
          username: jorendha
          port: 22
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          overwrite: true
          source: ./punchy-frontend/dist/*
          target: /home/jorendha/public_html/punchy_frontend
          strip_components: 2

  deploy-backend:
    runs-on: ubuntu-latest
    needs: [ remove-previous-code, changes ]
    if: ${{ needs.changes.outputs.backend == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.3
        with:
          host: jorendhaen.be
          username: jorendha
          port: 22
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          overwrite: true
          source: ./punchy-backend/*
          target: /home/jorendha/public_html/punchy_backend
          strip_components: 1

  run-backend-commands:
    runs-on: ubuntu-latest
    needs: [ deploy-backend, changes ]
    if: ${{ needs.changes.outputs.backend == 'true' }}

    steps:
      - name: run laravel setup commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: jorendhaen.be
          username: jorendha
          port: 22
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            echo "$PWD"
            cd public_html/punchy_backend
            composer install
            cp .env.example .env
            echo ${{ secrets.DB_DATABASE }} >> .env
            echo ${{ secrets.DB_USERNAME }} >> .env
            echo ${{ secrets.DB_PASSWORD }} >> .env
            echo ${{ secrets.MAIL_PASSWORD }} >> .env
            php artisan key:generate --force
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan optimize:clear
            php artisan storage:link
            php artisan queue:work
